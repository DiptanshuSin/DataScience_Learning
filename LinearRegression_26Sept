{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMWJz+957uKynqRrek+0iI6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/DiptanshuSin/DataScience_Learning/blob/NewChanges/LinearRegression_26Sept\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FAtNIrOPc9qI",
        "outputId": "ecc1e4e1-3333-4b3d-ff00-ec07e2b1ee86"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[160, 175, 156, 112, 111, 101, 159, 161, 171, 163, 119, 121, 127, 127, 116, 177, 168, 135, 103, 125, 165, 163, 121, 125, 150, 106, 129, 153, 145, 140, 109, 118, 178, 126, 152, 114, 140, 102, 163, 176, 110, 161, 172, 125, 139, 167, 159, 159, 106, 107, 111, 175, 119, 113, 149, 114, 173, 102, 109, 107, 129, 131, 165, 113, 159, 102, 136, 151, 121, 102, 114, 166, 180, 151, 146, 165, 118, 136, 168, 131, 118, 123, 151, 172, 116, 172, 178, 116, 118, 144, 172, 157, 123, 151, 144, 167, 117, 125, 120, 146]\n"
          ]
        }
      ],
      "source": [
        "from sklearn import linear_model\n",
        "from scipy import stats\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import random\n",
        "\n",
        "height = [random.randint(100, 180) for _ in range(100) ]\n",
        "print(height)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "weight = [random.randint(60,100)for _ in range(100)]\n",
        "print(weight)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bU78n19PEN2M",
        "outputId": "adb76f81-fec3-45fe-daca-9d0cbc66b3cd"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[90, 61, 85, 80, 71, 76, 96, 61, 85, 92, 63, 66, 69, 61, 83, 69, 87, 75, 92, 98, 81, 68, 96, 71, 99, 63, 64, 78, 82, 98, 77, 73, 60, 60, 94, 71, 74, 64, 68, 81, 63, 82, 69, 84, 64, 63, 84, 79, 75, 60, 76, 83, 98, 75, 81, 92, 95, 93, 71, 100, 94, 75, 70, 88, 86, 97, 98, 68, 98, 66, 67, 62, 87, 69, 100, 88, 65, 75, 82, 89, 68, 92, 97, 95, 71, 95, 77, 86, 88, 91, 95, 76, 95, 72, 89, 95, 72, 76, 80, 72]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Skewness of height: \",stats.skew(height))\n",
        "print(\"Skewness of weight: \",stats.skew(weight))\n",
        "print(\"Kurtosis of height: \",stats.kurtosis(height))\n",
        "print(\"Kurtosis of weight: \",stats.kurtosis(weight))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CzNvnVhWEdeU",
        "outputId": "3ee6f589-bf10-45a0-ab41-dc259ed5dc24"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Skewness of height:  0.1152940955897787\n",
            "Skewness of weight:  0.05335394405168338\n",
            "Kurtosis of height:  -1.3895221342706756\n",
            "Kurtosis of weight:  -1.2619755298028148\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Correlation between height and weight: \",stats.pearsonr(height,weight))\n",
        "print(\"Correlation between height and weight: \",stats.spearmanr(height,weight))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DZPquFYgFE1v",
        "outputId": "dd0ef552-3cd5-4a37-fc44-51b5d9aa383d"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Correlation between height and weight:  PearsonRResult(statistic=np.float64(0.08896811038580466), pvalue=np.float64(0.3787277603650536))\n",
            "Correlation between height and weight:  SignificanceResult(statistic=np.float64(0.08538354419569313), pvalue=np.float64(0.3983093378586149))\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(weight,height)\n",
        "plt.xlabel(\"Height\")\n",
        "plt.ylabel(\"Weight\")\n",
        "plt.title(\"Scatter Plot between height and weight\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "LI9NADYIFQ9z",
        "outputId": "94340b83-72c3-4f40-bd3c-745ac5525834"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "heightdf = pd.DataFrame(height)\n",
        "weightdf = pd.DataFrame(weight)\n",
        "print(heightdf)\n",
        "print(weightdf)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AW7b7EYPFmCF",
        "outputId": "696e30d8-0d18-485b-b671-4e3623a70c11"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      0\n",
            "0   160\n",
            "1   175\n",
            "2   156\n",
            "3   112\n",
            "4   111\n",
            "..  ...\n",
            "95  167\n",
            "96  117\n",
            "97  125\n",
            "98  120\n",
            "99  146\n",
            "\n",
            "[100 rows x 1 columns]\n",
            "     0\n",
            "0   90\n",
            "1   61\n",
            "2   85\n",
            "3   80\n",
            "4   71\n",
            "..  ..\n",
            "95  95\n",
            "96  72\n",
            "97  76\n",
            "98  80\n",
            "99  72\n",
            "\n",
            "[100 rows x 1 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = linear_model.LinearRegression()\n",
        "model.fit(heightdf,weightdf)\n",
        "print(\"Adjusted R square for Linear Regression model: \", model.score(heightdf,weightdf))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b8ekFkd6F142",
        "outputId": "8f7a732a-e747-4e49-f564-3a04f713b0b7"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Adjusted R square for Linear Regression model:  0.007915324665620727\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Coefficient of independent variables:\", model.coef_)\n",
        "print(\"Intercept of the model:\", model.intercept_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rrZV3HFOGObD",
        "outputId": "ec08a624-8b0b-4f9a-af98-60e58bc6c2ee"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Coefficient of independent variables: [[0.04459662]]\n",
            "Intercept of the model: [73.57203028]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "testHeight = [random.randint(100, 180) for _ in range(10) ]\n",
        "print(testHeight)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1pkFfNa4Gdzq",
        "outputId": "0ff8d6f9-4a88-49f6-9549-7613a968aaff"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[139, 136, 170, 173, 133, 105, 108, 170, 170, 130]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#prediction of weight depending on the height\n",
        "for i in testHeight:\n",
        "  {\n",
        "      print(\"Predicted weight for \"+str(i)+\" is: \",model.predict([[i]]))\n",
        "  }"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l7tZqu6xGlDR",
        "outputId": "f2d87599-606b-4a64-db8f-ff0d944201e7"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Predicted weight for 139 is:  [[79.77096041]]\n",
            "Predicted weight for 136 is:  [[79.63717055]]\n",
            "Predicted weight for 170 is:  [[81.15345562]]\n",
            "Predicted weight for 173 is:  [[81.28724548]]\n",
            "Predicted weight for 133 is:  [[79.50338069]]\n",
            "Predicted weight for 105 is:  [[78.25467534]]\n",
            "Predicted weight for 108 is:  [[78.3884652]]\n",
            "Predicted weight for 170 is:  [[81.15345562]]\n",
            "Predicted weight for 170 is:  [[81.15345562]]\n",
            "Predicted weight for 130 is:  [[79.36959083]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "uxlzOKiiF-u1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "TvrRgNI5F9SJ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}